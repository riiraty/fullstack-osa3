{"version":3,"sources":["services/persons.js","components/PersonForm.js","components/Persons.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","deletePerson","map","person","key","name","number","onClick","Filter","Notification","notification","className","message","App","useState","setPersons","setNewName","setNewNumber","filterString","setStringFilter","setNotification","useEffect","personService","notifyWith","setTimeout","personsToShow","length","filter","p","toLowerCase","includes","event","target","preventDefault","existing","find","window","confirm","retunedPerson","addedPerson","concat","catch","error","console","log","removablePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59110925.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => {\n        return response.data\n    })\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update}","import React from 'react'\n\nconst PersonForm = (props) => {\n\n    return (\n      <form onSubmit={props.addPerson}>\n      <div>\n        name: <input \n          value={props.newName}\n          onChange={props.handleNameChange} />\n      </div>\n      <div>\n          number: <input\n            value={props.newNumber}\n            onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n    )\n  }\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({persons, deletePerson}) => {\n    return (\n      persons.map(person => \n        <p key={person.name}>\n          {person.name} {person.number}\n          <button onClick={() => deletePerson(person.id)}>delete</button>\n        </p>\n      )\n    )\n  }\n\nexport default Persons","import React from 'react'\n\nconst Filter = (props) => {\n    return (\n      <input\n        value={props.value}\n        onChange={props.onChange} />\n    )\n  \n  }\n\nexport default Filter","import React from 'react'\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null\n  }\n\n  return (\n    <div className={notification.type}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterString, setStringFilter ] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  const hook = () => {\n    personService\n      .getAll()\n      .then((data) => {\n        setPersons(data)\n      })\n  }\n\n  useEffect(hook, [])\n\n  const notifyWith = (message, type='success') => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleNameChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n      setNewNumber(event.target.value)\n  }\n\n  const handleFilterStringChange = (event) => {\n      setStringFilter(event.target.value)\n  }\n\n  const deletePerson = (id) => {\n    console.log('delete clicked') \n    const removablePerson = persons.find(p => p.id === id)\n    if (window.confirm(`Delete ${removablePerson.name} ?`)) {\n  \n      personService\n        .remove(id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`Succesfully deleted ${removablePerson.name}`)\n        }).catch(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`${removablePerson.name} had already been removed`, 'error')\n        })\n    }  \n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const existing = persons.find(p => p.name === newName)\n    if (existing) {\n      const ok = window.confirm(`${existing.name} already in phonebook, replace the old number with new one?`)\n      if (ok) {\n        personService.update(existing.id, {\n          name: existing.name,\n          number:newNumber\n        }).then(retunedPerson => {\n          setPersons(persons.map(person => person.id !== existing.id ? person : retunedPerson))\n          notifyWith(`Changed number of  ${existing.name}`)\n          setNewName('')\n          setNewNumber('')\n        })\n      }\n\n    } else {\n      personService.create({\n        name: newName,\n        number: newNumber   \n      }).then(addedPerson => {\n        setPersons(persons.concat(addedPerson))\n        notifyWith(`Added ${newName}`)\n        setNewName('')\n        setNewNumber('')\n      }).catch(error => {\n        // p채채set k채siksi palvelimen palauttamaan virheilmoitusolioon n채in\n        console.log(error.response.data.error)\n        notifyWith(`${error.response.data.error} `, 'error')\n      })\n    }\n  }\n\n  const personsToShow = filterString.length === 0 ?\n  persons : \n  persons.filter(p => p.name.toLowerCase().includes(filterString.toLowerCase()))\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification notification={notification} />\n\n      filter with:\n      <Filter \n        value={filterString} \n        onChange={handleFilterStringChange} \n      />\n\n      <h3>Add new</h3>\n      <PersonForm \n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newNumber={newNumber}\n        newName={newName}\n        addPerson={addPerson}\n      />\n\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} deletePerson={deletePerson}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}